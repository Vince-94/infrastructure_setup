#! base-stage
ARG BASE_IMAGE
FROM $BASE_IMAGE as base-stage

ARG DEBIAN_FRONTEND=noninteractive

ARG UBUNTU_USER=docker_user
ARG UBUNTU_PSW=password
ARG UBUNTU_UID=1000
ARG UBUNTU_GID=1000

ENV UBUNTU_USER=$UBUNTU_USER
ENV UBUNTU_PSW=$UBUNTU_PSW
ENV UBUNTU_UID=$UBUNTU_UID
ENV UBUNTU_GID=$UBUNTU_GID

# Create local user docker_user
RUN useradd -r -m -d /home/$UBUNTU_USER -s /bin/bash -g root -G sudo -G dialout -u $UBUNTU_UID -p "$(openssl passwd -6 $UBUNTU_PSW)" $UBUNTU_USER

# Add local user to system groups
RUN usermod -aG sudo $UBUNTU_USER
RUN usermod -aG root $UBUNTU_USER
RUN usermod -aG dialout $UBUNTU_USER
RUN usermod -aG tty $UBUNTU_USER
RUN usermod -aG audio $UBUNTU_USER
RUN usermod -aG video $UBUNTU_USER


########################
# INSTALL DEPENDENCIES #
########################

# Update
RUN apt update && \
	apt upgrade -y

RUN apt install --quiet -y \
    sudo software-properties-common lsb-release
RUN add-apt-repository universe

# Ubuntu deps
RUN apt install --quiet -y \
    apt-transport-https ca-certificates gnupg gnupg2 gnupg-agent libssl-dev \
    git curl file wget zip unzip pkg-config openssh-client openssh-server \
    xterm tmux gdb valgrind \
    htop net-tools nmap lynx \
    libx11-dev

RUN apt install --quiet -y \
    bash-completion
RUN echo "source /usr/share/bash-completion/completions/git" >> ~/.bashrc

# C++ deps
RUN apt install --quiet -y \
    build-essential clang cmake ccache ninja-build

# C++ linter
RUN apt install --quiet -y \
    clang-tidy clang-tools \
    cppcheck \
    astyle

# C++ testing deps
RUN apt install --quiet -y libgtest-dev libgmock-dev lcov

# C++ common lib
RUN apt install --quiet -y \
    libboost-all-dev \
    libeigen3-dev

# Python deps
RUN apt install --quiet -y \
    python3 python3-dev python3-pip python3-future
RUN pip3 install --upgrade \
    wheel setuptools argcomplete

# Python linter
RUN pip3 install --upgrade \
    pylint flake8 mypy

# Python test
RUN pip3 install --upgrade \
    pytest==7.1.3 pytest-mock pytest-cov pytest-html \
    pytest-pep8 pytest-pylint pytest-flake8

# Python formatter
RUN pip3 install --upgrade \
    black

# Python utils libs
RUN apt install --quiet -y \
    python3-tk

RUN pip3 install --upgrade \
    pandas pyyaml jsonschema jinja2 toml

# Python visualization libs
RUN pip3 install --upgrade \
    matplotlib

# Python math libs
RUN pip3 install --upgrade \
    numpy scipy

# Python ML/CV/DL/AI libs
RUN pip3 install --upgrade \
    torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

RUN pip3 install --upgrade \
    tensorflow keras

RUN pip3 install --upgrade \
    scikit-learn


# Clean
RUN apt -y autoremove \
	&& apt clean autoclean \
	&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*


##################
# Final Settings #
##################

# Set user
USER $UBUNTU_USER
WORKDIR /home/$UBUNTU_USER

RUN echo "source /usr/share/bash-completion/completions/git" >> ~/.bashrc

# Set entrypoint
COPY ./docker/entrypoint.sh /
ENTRYPOINT ["/entrypoint.sh"]

ENV force_color_prompt=yes
CMD ["bash"]
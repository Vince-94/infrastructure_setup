ARG ROS_DISTRO

FROM $ROS_DISTRO as base-stage

ARG DEBIAN_FRONTEND=noninteractive

ARG UBUNTU_USER=docker_user
ARG UBUNTU_PSW=docker
ARG UBUNTU_UID=1000
ARG UBUNTU_GID=1000

ENV UBUNTU_USER=$UBUNTU_USER
ENV UBUNTU_PSW=$UBUNTU_PSW
ENV UBUNTU_UID=$UBUNTU_UID
ENV UBUNTU_GID=1000

# Create local user docker_user
RUN useradd -r -m -d /home/$UBUNTU_USER -s /bin/bash -g root -G sudo -G dialout -u $UBUNTU_UID -p "$(openssl passwd -6 $UBUNTU_PSW)" $UBUNTU_USER

# Add local user to system groups
RUN usermod -aG sudo $UBUNTU_USER
RUN usermod -aG dialout $UBUNTU_USER
RUN usermod -aG tty $UBUNTU_USER
RUN usermod -aG audio $UBUNTU_USER
RUN usermod -aG video $UBUNTU_USER

# Update
RUN apt update


########################
# INSTALL DEPENDENCIES #
########################

# Ubuntu deps
RUN apt install --quiet -y \
    sudo software-properties-common lsb-release \
    apt-transport-https ca-certificates gnupg gnupg2 gnupg-agent libssl-dev \
    curl file wget zip unzip pkg-config openssh-client openssh-server \
    xterm tmux gdb valgrind \
    htop net-tools nmap

# C++ deps
RUN apt install --quiet -y \
    build-essential \
    clang \
    cmake \
    ccache

# C++ linter
RUN apt install --quiet -y \
    clang-tidy clang-tools \
    cppcheck

# C++ testing deps
RUN apt install --quiet -y \
    libgtest-dev \
    libgmock-dev \
    lcov

# Python deps
RUN apt install --quiet -y \
    python3 \
    python3-dev \
    python3-pip

RUN pip3 install --upgrade \
    wheel \
    setuptools \
    argcomplete

# Python linter
RUN pip3 install --upgrade \
    pylint \
    flake8 \
    mypy

RUN pip3 install --upgrade \
    pytest==7.1.3 \
    pytest-mock \
    pytest-cov pytest-html \
    pytest-pep8 \
    pytest-pylint \
    pytest-flake8

RUN pip3 install --upgrade \
    pandas tk matplotlib \
    pyyaml \
    numpy scipy

# Python system control deps
RUN pip3 install --upgrade \
    qpsolvers \
    quadprog gurobipy osqp cvxopt cvxpy

# # install CVXOPT (https://cvxopt.org/)
# RUN pip3 install --upgrade cvxopt

# # install CVXPY (https://www.cvxpy.org/index.html)
# RUN pip3 install --upgrade cvxpy

# # install Guroby ()
# RUN pip3 install --upgrade gurobipy

# # install osqp ()
# RUN pip3 install --upgrade osqp


RUN pip3 install vcstool colcon-common-extensions


# #! gazebo-stage
# FROM base-stage as gazebo-stage



# #! ignition-stage
# FROM base-stage as ignition-stage

# Install Gazebo Ignition
# RUN sh -c 'echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'
# RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
# RUN apt update

RUN apt install -y ros-${ROS_DISTRO}-ros-ign

# Open html links
RUN apt install --quiet -y lynx
RUN usermod -aG root $UBUNTU_USER

# Install git
RUN apt install --quiet -y bash-completion


##############
# ENTRYPOINT #
##############

RUN add-apt-repository universe

# Configurations
#TODO hardcoded
# COPY .vscode/ $HOME/workspace/.vscode/

# Clean
RUN apt -y autoremove \
	&& apt clean autoclean \
	&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*

# Set user
USER $UBUNTU_USER
WORKDIR /home/$UBUNTU_USER

# Set entrypoint
COPY ./docker/ros2_entrypoint.sh /
ENTRYPOINT ["/ros2_entrypoint.sh"]

ENV force_color_prompt=yes
CMD ["bash"]